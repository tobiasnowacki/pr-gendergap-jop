
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.4     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(rio)
> library(rdrobust)
> library(modelsummary)
> library(kableExtra)

Attaching package: ‘kableExtra’

The following object is masked from ‘package:dplyr’:

    group_rows

> library(broom)
> library(devtools)
Loading required package: usethis
> source_url("https://raw.githubusercontent.com/tobiasnowacki/RTemplates/master/plottheme.R")
ℹ SHA-1 hash of file is "24d50dc41518460caa7dd1e4f46697f9eb053e29"
Registering fonts with R
Loading required package: viridisLite
> theme_set(theme_tn())
Warning message:
The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.
ℹ Please use the `linewidth` argument instead. 
> 
> source("code/utils/run_het_rd.R")
> 
> # Load data
> all_dat = read.csv("data/no_all.csv") %>%
+   filter(abs(winmargin_loc) < 0.5, winmargin_loc != 0,
+          pop_loc < 250000,
+          kname_loc != "Oslo") %>%
+   filter(inconsistency_candidate_loc == 0,
+     missing_votes_municipality_loc == 0)
> 
> #
> votes_by_prerank <- all_dat %>%
+     filter(sizeofcouncil_loc < 70 & sizeofcouncil_loc > 10) %>%
+     group_by(sizeofcouncil_loc, rank_loc) %>%
+     summarise(mean_pv = mean(personalvotes_total_loc, na.rm = TRUE),
+               pct_elected = mean(elected_loc == 1, na.rm = TRUE),
+               count = n())
`summarise()` has grouped output by 'sizeofcouncil_loc'. You can override using
the `.groups` argument.
> 
> fem_by_prerank <- all_dat %>%
+     filter(sizeofcouncil_loc < 70 & sizeofcouncil_loc > 33) %>%
+     group_by(sizeofcouncil_loc, rank_loc) %>%
+     summarise(mean_pv = mean(female, na.rm = TRUE))
`summarise()` has grouped output by 'sizeofcouncil_loc'. You can override using
the `.groups` argument.
> 
> # how many obs per council size rank?
> all_dat %>%
+     filter(sizeofcouncil_loc < 70) %>%
+     group_by(sizeofcouncil_loc) %>%
+     summarise(count = n_distinct(knr_loc),
+               mean_pop = mean(pop_loc)) %>%
+     print(n = 60)
# A tibble: 27 × 3
   sizeofcouncil_loc count mean_pop
               <int> <int>    <dbl>
 1                11     7     715.
 2                13    21     868.
 3                15    57    1295.
 4                17   134    2017.
 5                19    57    3222.
 6                21   107    3603.
 7                23    38    4994.
 8                25    73    5974.
 9                27    64    8968.
10                29    28    9862.
11                31    24   13561.
12                33    14   12868.
13                35    59   18001.
14                37    12   16261.
15                39    14   36957.
16                41    19   23816.
17                43    10   42902.
18                45    13   33023.
19                47    11   33466.
20                49    12   46266.
21                51     3   95252.
22                53     3   78827.
23                55     4   68210.
24                57     1  100581 
25                59     1   31976 
26                61     1   39695 
27                67     4  165585.
> 
> ggplot(votes_by_prerank,
+     aes(x = rank_loc)) +
+     geom_line(aes(y = mean_pv),
+                   alpha = 1) +
+     # geom_line(aes(y = mean_pv,
+     #               colour = as.factor(female)),
+     #               alpha = 1) +
+     labs(x = "Pre-Vote Rank Position", y = "Personal Votes") +
+     facet_wrap(. ~ sizeofcouncil_loc, scales = "free")
There were 50 or more warnings (use warnings() to see the first 50)
> 
> ggsave("output/figures/norway_pv_by_rank.pdf",
+     width = 8, height = 6,
+     device = cairo_pdf)
> 
> proc.time()
   user  system elapsed 
 20.754   1.150  22.060 
